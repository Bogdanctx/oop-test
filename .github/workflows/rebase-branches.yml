name: Automatic rebase branches

on:
  workflow_dispatch:
    inputs:
      base_branch:
        description: 'Branch to rebase onto'
        required: false # daca nu e specificat, se face rebase pe toate branch-urile
permissions:
  contents: write

jobs:
  rebase:
    # renovate: depName=ubuntu
    runs-on: ubuntu-22.04
    env:
      DEFAULT_BASE: 'main'
    steps:
      - name: Checkout repository
        # renovate: datasource=github-tags depName=actions/checkout versioning=loose
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
      
      - name: Fetch branches
        run: |
          git fetch origin
          git branch -r | 
            grep 'origin/' | 
            grep -v "origin/HEAD" | 
            grep -v "origin/${{ env.DEFAULT_BASE }}" | 
            sed 's#origin/##' > branches.txt
          
          echo "Branches to rebase:"
          cat branches.txt

      - name: Read custom base branches
        run: |
          BASE_BRANCHES=$(jq -c '.' .github/rebase-branches.json)
          echo "BASE_BRANCHES=$BASE_BRANCHES" >> $GITHUB_ENV

      - name: Rebase branches
        env:
          INPUT_BASE_BRANCH: ${{ github.event.inputs.base_branch }}
        continue-on-error: true # in caz de conflict sa nu se opreasca
        run: |
          while read -r BRANCH; do
            echo "Rebasing branch: $BRANCH"

            git show origin/$DEFAULT_BASE:.github/rebase-branches.json > .github/rebase-branches.json

            # Daca BRANCH e in rebase-branches.json, foloseste base-ul de acolo. Daca nu, foloseste default_base = 'main'
            BASE=$(echo "$BASE_BRANCHES" | jq -r --arg BRANCH "$BRANCH" '.[$BRANCH] // env.DEFAULT_BASE')
            
            # Daca a fost scris un base in input, suprascriu BASE
            if [[ -n "$INPUT_BASE_BRANCH" ]]; then
              BASE="$INPUT_BASE_BRANCH"
            fi
            
            echo "Using base: $BASE"
            git checkout -B "$BRANCH" "origin/$BRANCH"
            
            if git rebase "origin/$BASE"; then
              git push origin "$BRANCH" --force-with-lease
              echo "Rebased $BRANCH"
            else
              echo "Conflict on $BRANCH"
              git rebase --abort
            fi
            echo "-----------------------------------"
          done <<< "$(cat branches.txt)"